#!/bin/bash

### BEGIN INIT INFO
# Provides:		<%= sbd_watchdog %>
# Required-Start:	$network
# Should-Start:		$syslog
# Required-Stop:	$network
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	Starts and stops Pacemaker Storage Based Death watchdog.
# Description:		Starts and stops Pacemaker Storage Based Death watchdog.
### END INIT INFO

desc="Pacemaker SBD Watchdog"
prog="sbd"

SBD_DEVICE="<%= sbd_device -%>"
PARAMS="-d $SBD_DEVICE watch"
LOCK_FILE=/var/lock/pacemaker-sbd

PATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/sbin"

success()
{
	echo -ne "[  OK  ]\r"
}

failure()
{
	echo -ne "[FAILED]\r"
}

status()
{
	pid=$(pidof $1 2>/dev/null)
	rtrn=$?
	if [ $rtrn -ne 0 ]; then
		echo "$1 is stopped"
	else
		echo "$1 (pid $pid) is running..."
	fi
	return $rtrn
}

start()
{
	echo -n "Starting $desc: "

	mkdir -p /var/run

	if status $prog > /dev/null 2>&1; then
		success
	else
		$prog $PARAMS > /dev/null 2>&1
		
		if status $prog > /dev/null 2>&1; then
			touch $LOCK_FILE
			pidof $prog > /var/run/$prog.pid
			success
		else
			failure
			rtrn=1
		fi
	fi
	echo
}

stop()
{
	! status $prog > /dev/null 2>&1 && return

	echo -n "Signaling $desc to terminate: "
	kill -9 $( pidof $prog | xargs -n1 | sort -n | xargs )
	while status $prog > /dev/null 2>&1; do
		sleep 1
		echo -n "."
	done

	rm -f $LOCK_FILE
	rm -f /var/run/$prog.pid
	success
	echo
}

restart()
{
	stop
	start
}

rtrn=0

case "$1" in
start)
	start
;;
restart|reload|force-reload)
	restart
;;
condrestart|try-restart)
	if status $prog > /dev/null 2>&1; then
		restart
	fi
;;
status)
	status $prog
	rtrn=$?
;;
stop)
	stop
;;
*)
	echo "usage: $0 {start|stop|restart|reload|force-reload|condrestart|try-restart|status}"
	rtrn=2
;;
esac

exit $rtrn
